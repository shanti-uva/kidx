{
  "name": "express-crud",
  "version": "4.0.1",
  "description": "Easy CRUD for express apps!",
  "main": "./lib",
  "scripts": {
    "jshint": "jshint lib && jshint --config .jshintrc-test test",
    "debug": "mocha --debug-brk",
    "cover": "istanbul cover _mocha -- -R spec && cat ./coverage/lcov.info | coveralls -v && rm -rf coverage",
    "report": "istanbul report cobertura",
    "test": "npm run-script jshint && npm run-script cover && npm run-script report"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jsdevel/node-express-crud.git"
  },
  "keywords": [
    "crud",
    "express"
  ],
  "author": {
    "name": "Joseph Spencer"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/jsdevel/node-express-crud/issues"
  },
  "homepage": "https://github.com/jsdevel/node-express-crud",
  "peerDependencies": {
    "express": "*",
    "async": "*"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "should": "~3.1.3",
    "istanbul": "~0.2.6",
    "jshint": "~2.4.4",
    "async": "*",
    "coveralls": "~2.10.0",
    "noport": "~1.0.1",
    "request": "~2.36.0",
    "express": "~4.4.3"
  },
  "dependencies": {
    "err-handler": "0.0.0"
  },
  "readme": "# express-crud [![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coveralls Status][coveralls-image]][coveralls-url]\n> Easily route a resource's crud methods to express apps!\n\n##Example\nHere's a User resource that exposes some CRUD methods:\n\n````javascript\nmodule.exports = {\n  create:   function(query, model, cb){\n  ....\n  cb(null, [\"create\"]); //first argument is response status, second is array of response data\n  },\n  delete:   function(id, query, cb){},\n  read:     function(query, cb){},\n  readById: function(id, query, cb){},\n  update:   function(id, query, model, cb){}\n};\n````\n\nHere's how you add the routes to your express app:\n````javascript\nvar app = require('express')();\nvar User = require('./models/User');\n\nrequire('express-crud')(app);\n\napp.crud('users', User);\n````\n\nHere's how you add the routes to your express app using a formatted response object:\n````javascript\nvar app = require('express')();\nvar User = require('./models/User');\nvar opts = {\n\tformatResponse: function(result) {\n\t\treturn {\n\t\t\ttimestamp: Date.now(),\n\t\t\tpayload: result\n\t\t};\n\t}\n};\n\nrequire('express-crud')(app, opts);\n\napp.crud('users', User);\n````\n\nNow your express app has the following routes:\n````\nDELETE /users/:id\nGET /users\nGET /users/:id\nPOST /users\nPUT /users/:id\n````\n\n### Changing the param name\nYou can change the param name by specifying it at the end of your route:\n```javascript\napp.crud('users/:userId', User);\n```\n\nNow your express app has the following routes:\n````\nDELETE /users/:userId\nGET /users\nGET /users/:userId\nPOST /users\nPUT /users/:userId\n````\n\n###With some middleware\n````javascript\nvar authorizeMiddleware = function(req, res, next){//arity matters!\n  if(req.query.username !== 'foo')return next(new Error('user not foo!'));\n  next();\n};\nvar fooMiddleware = function(req, res, next){next();};\n\napp.crud('users', authorizeMiddleware, fooMiddleware, User);\n````\n\n### Restrict access to resources by user\n```javascript\napp.crud('settings/:settingId', authorizeMiddleware, function(req, res, next){\n  //ensure that the resource get's the username.\n  req.query.username = req.user.name;\n  next();\n}, SettingsResource);\n```\n### Format your response\n\n### With any path\n````javascript\napp.crud('/any/old/path/for/users', User);\n````\n\n## Status Codes\nWhen you call the callback given to resource methods without an error object as the\nfirst arg, `express-crud` will use either `204` or `200` depending on the context.\nIf you wish to pass a non `2xx` status code up to your application the preferred\nway is to assign a `status` property to your `error` object I.E. `cb({status: 404})`.\n\n[downloads-image]: http://img.shields.io/npm/dm/express-crud.svg\n[npm-url]: https://npmjs.org/package/express-crud\n[npm-image]: http://img.shields.io/npm/v/express-crud.svg\n\n[travis-url]: https://travis-ci.org/jsdevel/node-express-crud\n[travis-image]: http://img.shields.io/travis/jsdevel/node-express-crud.svg\n\n[coveralls-url]: https://coveralls.io/r/jsdevel/node-express-crud\n[coveralls-image]: http://img.shields.io/coveralls/jsdevel/node-express-crud/master.svg\n",
  "readmeFilename": "README.md",
  "_id": "express-crud@4.0.1",
  "dist": {
    "shasum": "c2b1c48503ad8a2ee47bd71e29e7d05edf253442"
  },
  "_from": "express-crud@4.0.1",
  "_resolved": "https://registry.npmjs.org/express-crud/-/express-crud-4.0.1.tgz"
}
